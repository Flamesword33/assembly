set unit_max 24
set switch_length 29
set unit_type_index 0
For(unit_tally<switch_length):set unit_tally 0
set first 0
op mul tmp unit_type_index 2
While(counting_units):op add @counter @counter tmp
ubind @dagger
jump Break_switch1 always 0 0
ubind @mace
jump Break_switch1 always 0 0
ubind @fortress
jump Break_switch1 always 0 0
ubind @scepter
jump Break_switch1 always 0 0
ubind @reign
jump Break_switch1 always 0 0
ubind @nova
jump Break_switch1 always 0 0
ubind @pulsar
jump Break_switch1 always 0 0
ubind @quasar
jump Break_switch1 always 0 0
ubind @vela
jump Break_switch1 always 0 0
ubind @corvus
jump Break_switch1 always 0 0
ubind @crawler
jump Break_switch1 always 0 0
ubind @atrax
jump Break_switch1 always 0 0
ubind @spiroct
jump Break_switch1 always 0 0
ubind @arkyid
jump Break_switch1 always 0 0
ubind @toxopid
jump Break_switch1 always 0 0
ubind @flare
jump Break_switch1 always 0 0
ubind @horizon
jump Break_switch1 always 0 0
ubind @zenith
jump Break_switch1 always 0 0
ubind @antumbra
jump Break_switch1 always 0 0
ubind @eclipse
jump Break_switch1 always 0 0
ubind @mono
jump Break_switch1 always 0 0
ubind @poly
jump Break_switch1 always 0 0
ubind @mega
jump Break_switch1 always 0 0
ubind @quad
jump Break_switch1 always 0 0
ubind @oct
jump Break_switch1 always 0 0
ubind @risso
jump Break_switch1 always 0 0
ubind @minke
jump Break_switch1 always 0 0
ubind @bryde
jump Break_switch1 always 0 0
ubind @sei
jump Break_switch1 always 0 0
ubind @omura
Break_switch1:jump Unit_counted equal @unit null
jump Unit_counted equal @unit first
jump Unit_counted equal unit_tally unit_max
op add unit_tally unit_tally 1
jump If(unit_tally>1) greaterThan unit_tally 1
set first @unit
If(unit_tally>1):jump While(counting_units) always 0 0
Unit_counted:write unit_tally cell1 unit_type_index
jump All_counted equal unit_type_index switch_length
op add unit_type_index unit_type_index 1
jump For(unit_tally<switch_length) always 0 0
All_counted:set unit_type_index 0
Print_loop:op mul tmp unit_type_index 2
op add @counter @counter tmp
set unit_type " Dagger"
jump Break_switch2 always 0 0
set unit_type " Mace"
jump Break_switch2 always 0 0
set unit_type " Fortress"
jump Break_switch2 always 0 0
set unit_type " Scepter"
jump Break_switch2 always 0 0
set unit_type " Reign"
jump Break_switch2 always 0 0
set unit_type " Nova"
jump Break_switch2 always 0 0
set unit_type " Pulsar"
jump Break_switch2 always 0 0
set unit_type " Quasar"
jump Break_switch2 always 0 0
set unit_type " Vela"
jump Break_switch2 always 0 0
set unit_type " Corvus"
jump Break_switch2 always 0 0
set unit_type " Crawler"
jump Break_switch2 always 0 0
set unit_type " Atrax"
jump Break_switch2 always 0 0
set unit_type " Spiroct"
jump Break_switch2 always 0 0
set unit_type " Arkyid"
jump Break_switch2 always 0 0
set unit_type " Toxopid"
jump Break_switch2 always 0 0
set unit_type " Flare"
jump Break_switch2 always 0 0
set unit_type " Horizon"
jump Break_switch2 always 0 0
set unit_type " Zenith"
jump Break_switch2 always 0 0
set unit_type " Antumbra"
jump Break_switch2 always 0 0
set unit_type " Eclipse"
jump Break_switch2 always 0 0
set unit_type " Mono"
jump Break_switch2 always 0 0
set unit_type " Poly"
jump Break_switch2 always 0 0
set unit_type " Mega"
jump Break_switch2 always 0 0
set unit_type " Quad"
jump Break_switch2 always 0 0
set unit_type " Oct"
jump Break_switch2 always 0 0
set unit_type " Risso"
jump Break_switch2 always 0 0
set unit_type " Minke"
jump Break_switch2 always 0 0
set unit_type " Bryde"
jump Break_switch2 always 0 0
set unit_type " Sei"
jump Break_switch2 always 0 0
set unit_type " Omura"
Break_switch2:read unit_count cell1 unit_type_index
jump If(unit_count==0) equal unit_count 0
print "\unit_count"
print unit_count
print unit_type
If(unit_count==0):op add unit_type_index unit_type_index 1
jump Print_loop lessThanEq unit_type_index switch_length
printflush message1
